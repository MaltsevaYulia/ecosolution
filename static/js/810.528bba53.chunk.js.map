{"version":3,"file":"static/js/810.528bba53.chunk.js","mappings":"kLAOaA,EAAY,CACvB,CACEC,KAAM,QACNC,I,yoIACAC,IAAK,yBACLC,IAAIC,EAAAA,EAAAA,OAEN,CACEJ,KAAM,gBACNC,I,i7HACAC,IAAK,yBACLC,IAAIC,EAAAA,EAAAA,OAEN,CACEJ,KAAM,OACNC,I,qsGACAC,IAAK,+BACLC,IAAIC,EAAAA,EAAAA,OAEN,CACEJ,KAAM,WACNC,I,qiHACAC,IAAK,uBACLC,IAAIC,EAAAA,EAAAA,QC7BR,GAAgB,QAAU,2BAA2B,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,wBAAwB,KAAO,yB,SCiCzJ,EA7BkB,WAGhB,OACEC,EAAAA,EAAAA,MAAA,WAASC,UAAWC,EAAAA,QAAaJ,GAAG,YAAWK,SAAA,EAC7CC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,QAAOE,SAAC,6BACtBC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAAA,KAASC,SACrBT,EAAUW,KAAI,SAAAC,GAA6B,IAA1BX,EAAIW,EAAJX,KAAME,EAAGS,EAAHT,IAAKD,EAAGU,EAAHV,IAAKE,EAAEQ,EAAFR,GAEhC,OACEM,EAAAA,EAAAA,KAAA,MAAaH,UAAWC,EAAAA,KAASC,UAC/BH,EAAAA,EAAAA,MAAA,KACEO,KAAMV,EACNW,OAAO,SACPC,IAAI,sBACJR,UAAWC,EAAAA,KACX,sBAAAQ,OAAqBf,EAAI,aAAYQ,SAAA,EAErCC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAAA,UAAcC,SAAER,KAC9BS,EAAAA,EAAAA,KAAA,OAAKO,IAAKf,EAAKgB,IAAKjB,EAAMM,UAAWC,EAAAA,WAThCJ,EAab,QAIR,C,wDC/BO,IAkBIC,EAAS,WAAH,IAAIc,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAE,OAC5BG,OAAOC,gBAAgB,IAAIC,WAAWN,IAAOO,QAAO,SAACtB,EAAIuB,GAWvD,OAREvB,IAFFuB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGV,GAAG,GAAG,C","sources":["constants/customers.js","webpack://ecosolution/./src/components/Customers/Customers.module.css?85f2","components/Customers/Customers.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { nanoid } from 'nanoid';\n\nimport zakhidnyi from 'assets/customers/zakhidnyi.png';\nimport audi from 'assets/customers/audi.png';\nimport dnipro from 'assets/customers/dnipro.png';\nimport bosch from 'assets/customers/bosch.png';\n\nexport const customers = [\n  {\n    name: 'Bosch',\n    img: bosch,\n    url: 'https://www.bosch.com/',\n    id: nanoid(),\n  },\n  {\n    name: 'Zakhidnyi Buh',\n    img: zakhidnyi,\n    url: 'https://zahbug.com/en/',\n    id: nanoid(),\n  },\n  {\n    name: 'Audi',\n    img: audi,\n    url: 'https://www.audi.com/en.html',\n    id: nanoid(),\n  },\n  {\n    name: 'Dnipro M',\n    img: dnipro,\n    url: 'https://dnipro-m.ua/',\n    id: nanoid(),\n  },\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Customers_section__wq9qd\",\"list\":\"Customers_list__7kl9i\",\"item\":\"Customers_item__kxckp\",\"link\":\"Customers_link__q4N0e\",\"logo\":\"Customers_logo__lIB7b\"};","import React from 'react';\nimport { customers } from 'constants/customers';\n\nimport css from './Customers.module.css';\n\nconst Customers = () => {\n \n\n  return (\n    <section className={css.section} id=\"customers\">\n      <h2 className=\"title\">our satisfied customers</h2>\n      <ul className={css.list}>\n        {customers.map(({ name, url, img, id }) => {\n        \n          return (\n            <li key={id} className={css.item}>\n              <a\n                href={url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={css.link}\n                aria-label={`go to ${name} web site`}\n              >\n                <p className={css.brandName}>{name}</p>\n                <img src={img} alt={name} className={css.logo} />\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nexport default Customers;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["customers","name","img","url","id","nanoid","_jsxs","className","css","children","_jsx","map","_ref","href","target","rel","concat","src","alt","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}