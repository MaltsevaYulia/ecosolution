{"version":3,"file":"static/js/921.abb9ca50.chunk.js","mappings":"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","sources":["constants/services.js","webpack://test-softryzen/./src/components/Services/Services.module.css?9a4c","components/Services/Services.jsx","../node_modules/@react-hook/media-query/dist/module/index.js"],"sourcesContent":["export const services = ['Solar', 'Wind', 'Hydro', 'Thermal', 'Nuclear'];","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Services_section__qTrGM\",\"text\":\"Services_text__KqJDz\",\"box\":\"Services_box__y2v5+\",\"boxTitleWrapper\":\"Services_boxTitleWrapper__UHDZV\",\"boxTitle\":\"Services_boxTitle__geQrc\",\"boxBtn\":\"Services_boxBtn__5kayl\",\"boxImg\":\"Services_boxImg__+42W5\",\"readMore\":\"Services_readMore__PweGK\",\"iconArrow\":\"Services_iconArrow__BO2tK\",\"wrapper\":\"Services_wrapper__5ub07\",\"listWrapper\":\"Services_listWrapper__azHQn\",\"list\":\"Services_list__7ugT1\",\"item\":\"Services_item__5d-re\",\"activeItem\":\"Services_activeItem__9c6vh\",\"itemText\":\"Services_itemText__ojnVD\",\"visually-hidden\":\"Services_visually-hidden__D0h4b\"};","import React, { useState } from 'react';\nimport { services } from 'constants/services';\nimport sprite from 'assets/sprite.svg';\nimport css from './Services.module.css';\nimport img1x from 'assets/servises/img1x.jpg';\nimport img2x from 'assets/servises/img1x.jpg';\nimport { useMediaQuery } from '@react-hook/media-query';\n\nconst Services = () => {\n  const isScreenBig = useMediaQuery('(min-width: 1280px)');\n  const [activItem, setActivItem] = useState('');\n\n  return (\n    <section id=\"service\" className={css.section}>\n      <h2 className=\"title\">\n        The services\n        <br /> we provide\n      </h2>\n\n      <div className={css.wrapper}>\n        {!isScreenBig && (\n          <p className={css.text}>\n            Development and implementation of renewable enviroMentally friendly\n            energy sources\n          </p>\n        )}\n        {!activItem && isScreenBig && (\n          <p className={css.text}>\n            Development and implementation of renewable enviroMentally friendly\n            energy sources\n          </p>\n        )}\n        {activItem && isScreenBig && (\n          <div className={css.box}>\n            <div className={css.boxTitleWrapper}>\n              <p className={css.boxTitle}>{activItem} Energy</p>\n              <button className={css.boxBtn}>\n                <svg className={css.iconArrow} width=\"60\" height=\"60\">\n                  <use href={`${sprite}#icon-arrow-right-green`} />\n                </svg>\n              </button>\n            </div>\n            <img\n              className={css.boxImg}\n              alt=\"\"\n              srcSet={`${img1x} 1x, ${img2x} 2x`}\n              src={img1x}\n              width=\"348\"\n              height=\"348\"\n            />\n            <p className={css.readMore}>Read more about {activItem} Energy</p>\n            {/* <a href=\"#\">Read more about Wind Energy</a> */}\n          </div>\n        )}\n        <div className={css.listWrapper}>\n          <ul className={css.list}>\n            {services.map(item => (\n              <li\n                key={item}\n                className={`${css.item} ${\n                  item === activItem ? css.activeItem : ''\n                } `}\n                onClick={() =>\n                  item === activItem ? setActivItem('') : setActivItem(item)\n                }\n              >\n                <p className={css.itemText}>{item}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Services;\n","import * as React from 'react';\n\nfunction queriesDidChange(prevQueries, nextQueries) {\n  if (nextQueries === prevQueries) return false;\n  const nextQueriesArr = Object.values(nextQueries);\n  const prevQueriesArr = Object.values(prevQueries);\n  if (nextQueriesArr.length !== prevQueriesArr.length) return true;\n  if (nextQueriesArr.some((q, i) => q !== prevQueriesArr[i])) return true;\n  const prevKeys = Object.keys(prevQueries);\n  return Object.keys(nextQueries).some((n, i) => n !== prevKeys[i]);\n}\n\nfunction _ref(curr, key) {\n  curr.matches[key] = false;\n  curr.mediaQueries[key] = {};\n  return curr;\n}\n\nfunction init(queries) {\n  const queryKeys = Object.keys(queries);\n  /* istanbul ignore next */\n\n  if (typeof window === 'undefined') return queryKeys.reduce(_ref, {\n    mediaQueries: {},\n    matches: {}\n  });\n  return queryKeys.reduce((state, name) => {\n    const mql = window.matchMedia(queries[name]);\n    state.mediaQueries[name] = mql;\n    state.matches[name] = mql.matches;\n    return state;\n  }, {\n    mediaQueries: {},\n    matches: {}\n  });\n}\n\nfunction reducer(state, action) {\n  function _ref2(prev, key) {\n    prev[key] = state.mediaQueries[key].matches;\n    return prev;\n  }\n\n  switch (action.type) {\n    case 'updateMatches':\n      return {\n        matches: Object.keys(state.mediaQueries).reduce(_ref2, {}),\n        mediaQueries: state.mediaQueries\n      };\n\n    case 'setQueries':\n      return init(action.queries);\n  }\n}\n/**\n * A hook that returns a [`MediaQueryMatches`](#mediaquerymatches) object which will\n * tell you if specific media queries matched, all media queries matched, or\n * any media queries matched. Matches in this hook will always return `false` when\n * rendering on the server.\n *\n * @param queryMap The media queries you want to match against e.g. `{screen: \"screen\", width: \"(min-width: 12em)\"}`\n */\n\n\nexport function useMediaQueries(queryMap) {\n  const prevQueries = React.useRef(queryMap);\n  const [state, dispatch] = React.useReducer(reducer, queryMap, init);\n  React.useEffect(() => {\n    if (queriesDidChange(queryMap, prevQueries.current)) {\n      dispatch({\n        type: 'setQueries',\n        queries: queryMap\n      });\n      prevQueries.current = queryMap;\n    }\n  }, [queryMap]);\n\n  function _ref3() {\n    return dispatch({\n      type: 'updateMatches'\n    });\n  }\n\n  function _ref4(mq) {\n    const callback = _ref3;\n    if (typeof mq.addListener !== 'undefined') mq.addListener(callback);else mq.addEventListener('change', callback);\n    return callback;\n  }\n\n  React.useEffect(() => {\n    const queries = Object.values(state.mediaQueries);\n    const callbacks = queries.map(_ref4);\n\n    function _ref5(mq, i) {\n      if (typeof mq.addListener !== 'undefined') mq.removeListener(callbacks[i]);else mq.removeEventListener('change', callbacks[i]);\n    }\n\n    return () => {\n      queries.forEach(_ref5);\n    };\n  }, [state.mediaQueries]);\n  const {\n    matches\n  } = state;\n  const matchValues = React.useMemo(() => Object.values(matches), [matches]);\n  return {\n    matches,\n    matchesAny: matchValues.some(Boolean),\n    matchesAll: matchValues.length > 0 && matchValues.every(Boolean)\n  };\n}\n/**\n * A hook that returns `true` if the media query matched and `false` if not. This\n * hook will always return `false` when rendering on the server.\n *\n * @param query The media query you want to match against e.g. `\"only screen and (min-width: 12em)\"`\n */\n\nexport function useMediaQuery(query) {\n  return useMediaQueries(getObj(query)).matchesAll;\n}\nconst cache = {};\n\nfunction getObj(query) {\n  if (cache[query] === void 0) cache[query] = {\n    default: query\n  };\n  return cache[query];\n}"],"names":["services","isScreenBig","useMediaQuery","_useState","useState","_useState2","_slicedToArray","activItem","setActivItem","_jsxs","id","className","css","children","_jsx","width","height","href","concat","sprite","alt","srcSet","img1x","img2x","src","map","item","onClick","_ref","curr","key","matches","mediaQueries","init","queries","queryKeys","Object","keys","window","reduce","state","name","mql","matchMedia","reducer","action","type","prev","useMediaQueries","queryMap","prevQueries","React","_React$useReducer","_React$useReducer2","dispatch","_ref3","_ref4","mq","callback","addListener","addEventListener","nextQueries","nextQueriesArr","values","prevQueriesArr","length","some","q","i","prevKeys","n","queriesDidChange","current","callbacks","_ref5","removeListener","removeEventListener","forEach","matchValues","matchesAny","Boolean","matchesAll","every","query","cache","default","getObj"],"sourceRoot":""}